(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{384:function(t,v,_){"use strict";_.r(v);var a=_(46),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"压测怎么做"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测怎么做"}},[t._v("#")]),t._v(" 压测怎么做")]),t._v(" "),_("h3",{attrs:{id:"为什么要做压测"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#为什么要做压测"}},[t._v("#")]),t._v(" 为什么要做压测")]),t._v(" "),_("p",[t._v("了解系统能够承受的极限，避免出现因大用户量访问而造成系统崩溃的出现")]),t._v(" "),_("h3",{attrs:{id:"压测的流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测的流程"}},[t._v("#")]),t._v(" 压测的流程")]),t._v(" "),_("p",[t._v("1.压测目标的制定\n2.压测链路的梳理\n3.压测环境的准备\n4.压测数据的构造\n5.发压测试\n6.瓶颈定位及容量微调\n7.压测总结")]),t._v(" "),_("h3",{attrs:{id:"什么时候用到压测"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用到压测"}},[t._v("#")]),t._v(" 什么时候用到压测")]),t._v(" "),_("ul",[_("li",[t._v("新服务，无预估目标，知道系统的瓶颈并进行优化")]),t._v(" "),_("li",[t._v("重大节日前的压测，有明确的压测目标，通过压测得到服务的各项指标是否达标")]),t._v(" "),_("li",[t._v("定期压测，为后期性能优化提出参考依据")])]),t._v(" "),_("h2",{attrs:{id:"压测指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测指标"}},[t._v("#")]),t._v(" 压测指标")]),t._v(" "),_("ul",[_("li",[t._v("QPS：Query Per Second，每秒处理的请求个数")]),t._v(" "),_("li",[t._v("TPS：Transactions Per Second，每秒处理的事务数，TPS <= QPS")]),t._v(" "),_("li",[t._v("RT： Response Time，响应时间，等价于Latency")]),t._v(" "),_("li",[t._v("RT分平均延时，Pct延时（Percentile分位数）。平均值不能反映服务真实响应延时，实际压测中一般参考Pct90，Pct99等指标")]),t._v(" "),_("li",[t._v("CPU使用率：出于节点宕机后负载均衡的考虑，一般 CPU使用率 < 75% 比较合适")]),t._v(" "),_("li",[t._v("内存使用率：内存占用情况，一般观察内存是否有尖刺或泄露")]),t._v(" "),_("li",[t._v("Load指标：CPU的负载，不是指CPU的使用率，而是在一段时间内CPU正在处理以及等待CPU处理的进程数之和的统计信息，表示CPU的负载情况，一般情况下 Load < CPU的核数*2，更多参考链接1和链接2")]),t._v(" "),_("li",[t._v("缓存命中率：多少流量能命中缓存层（redis、memcached等）")]),t._v(" "),_("li",[t._v("数据库耗时：数据库就是业务的生命，很多时候业务崩掉是因为数据库挂了")]),t._v(" "),_("li",[t._v("网络带宽：带宽是否瓶颈")]),t._v(" "),_("li",[t._v("接口响应错误率 or 错误日志量")])]),t._v(" "),_("h3",{attrs:{id:"qps和tps的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#qps和tps的区别"}},[t._v("#")]),t._v(" QPS和TPS的区别")]),t._v(" "),_("ul",[_("li",[t._v("QPS一般是指一台服务器每秒能够响应的查询次数，或者抽象理解成每秒能应对多少网络流量")]),t._v(" "),_("li",[t._v("TPS是指一个完整事务，一个事务可能包含一系列的请求过程。举个🌰，访问一个网页，这是一个TPS，但是访问一个网页可能会对多个服务器发起多次请求，包括文本、js、图片等，这些请求会当做多次QPS计算在内，因为它们都是流量")])]),t._v(" "),_("h3",{attrs:{id:"压测的测试思路"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测的测试思路"}},[t._v("#")]),t._v(" 压测的测试思路")]),t._v(" "),_("p",[t._v("1.在响应时间的限制下，系统最高的吞吐量（这里不对吞吐量做严格定义，当成是QPS或TPS即可）\n2.在成功率100%的前提下，不考虑响应时间长短，系统能承受的吞吐量\n3.容忍一定的失败率和慢响应，系统最高能承受的吞吐量（95%成功率，前95%的请求响应时间为xx毫秒时的最大QPS）\n4.在上面的场景下还要考虑时间和资源，比如最高吞吐量持续10分钟和持续1小时是不一样的，不同的时间持续长度下，机器资源（cpu、内存、负载、句柄、线程数、IO、带宽）的占用是否合理")]),t._v(" "),_("h3",{attrs:{id:"压测目标的预估"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测目标的预估"}},[t._v("#")]),t._v(" 压测目标的预估")]),t._v(" "),_("h4",{attrs:{id:"历史监控数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#历史监控数据"}},[t._v("#")]),t._v(" 历史监控数据")]),t._v(" "),_("p",[t._v("已经上线并且有历史监控数据的接口，可以查看历史数据，找出峰值QPS和PCT99。主要的接口上线时间足够长后，存量监控数据就可以使用了，可以按照之前某次大活动的峰值进行压测")]),t._v(" "),_("h4",{attrs:{id:"类比"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类比"}},[t._v("#")]),t._v(" 类比")]),t._v(" "),_("p",[t._v("新接口或未接入监控的接口，不存在历史数据，但存在类似功能接口的数据，可以类比得出压测目标")]),t._v(" "),_("h4",{attrs:{id:"估算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#估算"}},[t._v("#")]),t._v(" 估算")]),t._v(" "),_("p",[t._v("新接口或者线上未监控的接口，不存在历史数据，且不存在类似功能接口的数据可供参数考，此时需要估算峰值，常用方法有8/2原则——一天内80%的请求会在20%的时间内到达。")]),t._v(" "),_("p",[t._v("top QPS = (总PV * 0.8) / (60 * 60 * 24 * 0.2)")]),t._v(" "),_("p",[t._v("RT如无特殊要求，一般采用默认值：")]),t._v(" "),_("ul",[_("li",[t._v("单服务单表类，RT<100ms")]),t._v(" "),_("li",[t._v("较复杂接口，RT<300ms")]),t._v(" "),_("li",[t._v("大数据量或调用链较长的接口，RT<1s")])]),t._v(" "),_("h2",{attrs:{id:"压测准备"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压测准备"}},[t._v("#")]),t._v(" 压测准备")]),t._v(" "),_("p",[t._v("梳理压测场景：")]),t._v(" "),_("ol",[_("li",[t._v("高频业务场景（今日头条首页下拉刷新）")]),t._v(" "),_("li",[t._v("关键业务场景，使用频率低，一旦出问题就很严重（微信账号登录）")]),t._v(" "),_("li",[t._v("性能高消耗场景（淘宝下单）")]),t._v(" "),_("li",[t._v("曾经出现过问题的场景\n一个场景通常不止一个接口，多个场景下往往会存在着接口的重复，梳理每个接口的流量占比和优先级")])])])}),[],!1,null,null,null);v.default=s.exports}}]);