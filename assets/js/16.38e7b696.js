(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{390:function(n,e,s){"use strict";s.r(e);var t=s(46),o=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"记录一次面试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记录一次面试"}},[n._v("#")]),n._v(" 记录一次面试")]),n._v(" "),s("p",[n._v("自我介绍")]),n._v(" "),s("p",[n._v("Q:你未来想找一份什么样的工作")]),n._v(" "),s("p",[n._v("Q:你是如何设计测试用例的\n1.明确需求\n2.拆分需求\n3.梳理业务逻辑--等价类、边界值、因果图\n接口没有返回数据时，页面兜底展示\n接口返回的参数不完整\n接口返回中没有需求的参数名称\n4.页面测试\nQ:测试用例包含那些要素\n用例编号、产品模块、前置条件、操作步骤、预期结果、实际结果、bug状态、bug优先级、测试数据、备注\nQ:给你一个杯子，怎么测试")]),n._v(" "),s("p",[n._v("Q:有自己操作过MQ吗？MQ是一个怎么样的工作机制")]),n._v(" "),s("p",[n._v("Q:get和post的区别？\n继续追问？为什么get快，post慢\nGET和POST还有一个重大区别，简单的说：")]),n._v(" "),s("p",[n._v("GET产生一个TCP数据包;POST产生两个TCP数据包\n对于GET方式的请求，浏览器会把http header和data一并发送出去，服务器响应200(返回数据);")]),n._v(" "),s("p",[n._v("而对于POST，浏览器先发送header，服务器响应100 continue，浏览器再发送data，服务器响应200 ok(返回数据)。\nQ:\n1.存储位置不同\ncookie的数据信息存放在本地\nsession的数据信息存放在服务器上\n2.存储容量大小不同\ncookie存储的容量较小，一般<=4kb\nsession存储容量大小没有限制\n3.存储有效期不同\ncookie可以长期存储，只要不超过设置的过期时间，可以一直存储\nsession在超过一定的操作时间就会失效，当关闭浏览器时，为了保护用户信息，会自动调用seesion.invalidate()方法\n4.安全性不同\ncookie存储在客户端，所以可以分析存放在本地的cookie并进行cookie欺骗，安全性较低\nsession存储在服务器上，不存在铭感信息泄露的风险，安全性较高\n工作业务的自我总结，有什么规划")]),n._v(" "),s("p",[n._v("Q:抓安卓崩溃？抓客户端日志")]),n._v(" "),s("p",[n._v("Q:安卓的一些工具，除了adb，用adb命令查耗电量，")]),n._v(" "),s("p",[n._v("Q:反转字符串")]),n._v(" "),s("p",[n._v("Q:hashmap")]),n._v(" "),s("p",[n._v("Q:反向代理\n什么事反向代理，就是通过代理服务器连接请求，然后转发给实际的服务器，并且将服务器返回的结果返回给请求的客户端\n1.负载均衡，优化网站的负载\n2.保证内网的安全\nNginx 的最重要的几个使用场景：\nnginx 就是一个web服务器\n静态资源服务，通过本地文件系统提供服务；\n反向代理服务，延伸出包括缓存、负载均衡等；\nAPI 服务，")]),n._v(" "),s("p",[n._v("1.dns解析过程")]),n._v(" "),s("p",[n._v("浏览器检查自身缓存有没有解析过这个域名对应的ip地址")]),n._v(" "),s("p",[n._v("如果浏览器缓存没有，浏览器会检查操作系统缓存中有没有\nhosts文件")]),n._v(" "),s("p",[n._v("如果还没有，请求本地域名服务器来解析这个域名")]),n._v(" "),s("p",[n._v("如果还没有，请求root server进行解析\nopen 文件，在文件中打开\noption+command+p打开文件路径")]),n._v(" "),s("p",[n._v("ssh root@8.140.30.22\nmysql -uroot -p\nshow databases;\ncreate database testdb;\ndrop database test;\ndesc testdb;\nuse testdb;\ncreate table book(id int,bookname varchar(1024),size int);\n退出mysql：exit\n导入数据：source 路径\n查看数据库版本号：select verson();\n查看当前数据库：select database();\n\\c 终止一条sql语句的输入")]),n._v(" "),s("p",[n._v("rpc接口配置\n接口自动化配置\n自动化：\n配置，\n环境依赖\n实现步骤")]),n._v(" "),s("p",[n._v("如ui自动化\n1.导入模块\n2.创建浏览器驱动\n3.进入所测网址\n4.选择所测对象\n5.对所测对象进行动作处理\n6.响应断言")]),n._v(" "),s("p",[n._v("读取测试用例（包含url，data，请求方式，body，返回结果，测试结果，期望值）\n请求测试接口\n生成pytest认可的测试用例")]),n._v(" "),s("p",[n._v("配置：\n预发布数据库配置文件\nhost\nport\nusername\npaswword\ndb\ncharset\ncursorclass\n预发布接口地址\nurl\ndata={username,password}\n登录\n获取cookie和tocken\n连接数据库\n查询sql\n关闭数据库")]),n._v(" "),s("p",[n._v("登录，获取cookie，读取用例，发送请求，返回结果，对返回结果进行断言，连接数据库查询，验证结果，发送报告")]),n._v(" "),s("p",[n._v("app测试\n自动化\n性能")]),n._v(" "),s("p",[n._v("服务端测试\n接口自动化\nrpc\nmysql\nreids\nmq\n性能")]),n._v(" "),s("p",[n._v("项目\n电商项目")]),n._v(" "),s("p",[n._v("python")])])}),[],!1,null,null,null);e.default=o.exports}}]);