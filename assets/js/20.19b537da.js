(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{391:function(a,n,t){"use strict";t.r(n);var s=t(46),e=Object(s.a)({},(function(){var a=this,n=a.$createElement,t=a._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"欢迎强哥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#欢迎强哥"}},[a._v("#")]),a._v(" 欢迎强哥")]),a._v(" "),t("ul",[t("li",[a._v("os系统：linux")]),a._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("常用名称\n")])])])]),a._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("配置环境变量\n")])])])]),a._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("防火墙、网络\n")])])])]),a._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("linux性能分析命令\n")])])])])]),a._v(" "),t("h3",{attrs:{id:"python基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python基础"}},[a._v("#")]),a._v(" python基础")]),a._v(" "),t("ul",[t("li",[a._v("python解释器")]),a._v(" "),t("li",[a._v("cpu、内存、硬盘\n"),t("ul",[t("li",[a._v("cpu：只负责计算")]),a._v(" "),t("li",[a._v("内存：只负责数据临时存储")]),a._v(" "),t("li",[a._v("硬盘：只负责数据存储（永久）")]),a._v(" "),t("li",[a._v("硬盘提供数据->临时存到内存->cpu负责计算->计算结果存到内存->保存到硬盘")])])]),a._v(" "),t("li",[a._v("变量名 变量值 内存地址\n"),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code")])])])]),a._v('\nname = "charles"\nid(name)')])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('    * 先定义，后调用\n    * 程序全局都会用到的变量，尽量定义在文件开头\n    * 变量名只能是字母、数字或下划线的任意组合，其它形式均不合法\n    * 变量名的第一个字符不能是数字\n* 字符串\n    * 拼接，大小写切换，增加缩减\n    * count()统计数量\n    * endswith判断结尾\n    * find（）按字符查找，返回-1代表没有找到，如果找到了，就返回所查字符的索引\n    * "".join()拼接字符串\n    * a.replace("l","m",1)字符串替换\n    * a.split("l",1) 字符串分割\n* 列表\n    * 列表切片list[:n]\n    * list[0::n]步长\n    * list.sort()排序\n    * list.reverse()反转，反着排\n    * enumerate（n）索引\n* 字典\n* 元祖相关的操作\n* pycharm操作\n    * ctrl+D复制\n    * ctrl+？注释\n* 循环for\n    * continue 跳过本次循环，进行下一次\n    * break 结束当前循环\n* end="\\n"\n```random.choice([1,3,2,5,9])#随机1个\nrandom.randint(1,100)#随机1个数\ns = [1,3,4,5,7,9,8,0]\nprint(random.sample(s,3))#随机3个\nprint("".join(["a","b","c"]))#合并列表中的元素\nprint(string.ascii_letters)#随机字母\n')])])]),t("ul",[t("li",[a._v("解码\n"),t("ul",[t("li",[a._v("先解码后再编码 gbk->unicode->utf-8")])])])]),a._v(" "),t("h2",{attrs:{id:"python文件操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python文件操作"}},[a._v("#")]),a._v(" python文件操作")]),a._v(" "),t("p",[a._v('f = open(filename,mode="r")\nf.write()写操作\nf.read()读操作，读出所有内容\nf.readline()读一行\nf.readlines()读取内容，以列表的形式展示出来，每一行当成一个元素\nf.close()保存并关闭\nprint(f.read())')]),a._v(" "),t("p",[a._v("文件打开模式\nr只读\nw创建，若文件已存在，则覆盖旧文件\na追加模式，新数据会写到文件末尾\nf.write()")]),a._v(" "),t("p",[a._v("图片属于二进制文件，使用rb读，wb写\n“r+” 读写的时候，读完光标会到末尾，写之前，需要把光标定位到想写的地方")]),a._v(" "),t("h2",{attrs:{id:"迭代器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[a._v("#")]),a._v(" 迭代器")]),a._v(" "),t("h2",{attrs:{id:"生成器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成器"}},[a._v("#")]),a._v(" 生成器")]),a._v(" "),t("h2",{attrs:{id:"装饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[a._v("#")]),a._v(" 装饰器")]),a._v(" "),t("h2",{attrs:{id:"匿名函数-lamda"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数-lamda"}},[a._v("#")]),a._v(" 匿名函数-lamda")]),a._v(" "),t("p",[a._v("a = lamda x+y,y")])])}),[],!1,null,null,null);n.default=e.exports}}]);